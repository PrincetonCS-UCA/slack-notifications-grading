on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
  schedule:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    # Since Eastern Time has a 4 hour offset from UTC (which is where these
    # workflows run), and we want 30 minute intervals until the deadline of
    # Friday 11:59 pm, we need to define extra cron schedules for the time
    # differences.

    # +-----------+--------------------------+--------------------------+
    # | Day       | Eastern (Daylight) Time  | UTC                      |
    # +-----------+--------------------------+--------------------------+
    # | Sunday    | Every 3 hrs from 0-23    | Every 3 hrs from 4-3+    |
    # | Monday    | Every 3 hrs from 0-23    | Every 3 hrs from 4-3+    |
    # | Tuesday   | Every 3 hrs from 0-12    | Every 3 hrs from 4-16    |
    # |           | Every 30 mins from 12-23 | Every 30 mins from 16-3+ |
    # | Wednesday | Every 30 mins from 0-23  | Every 30 mins from 4-3+  |
    # | Thursday  | Every 30 mins from 0-23  | Every 30 mins from 4-3+  |
    # | Friday    | Every 30 mins from 0-23  | Every 30 mins from 4-3+  |
    # | Saturday  | Every 3 hrs from 0-23    | Every 3 hrs from 4-3+    |
    # +-----------+--------------------------+--------------------------+

    # https://crontab.guru/
    # Sunday
    - cron: '0 1/3 * * 0'
    # Monday
    - cron: '0 1/3 * * 1'
    # Tuesday
    - cron: '0 1,4,7,10,13 * * 2'
    - cron: '0,30 16-23 * * 2'
    # Wednesday, Thursday, Friday
    - cron: '0,30 * * * 3,4,5'
    # Saturday
    - cron: '0,30 0-3 * * 6'
    - cron: '0 4/3 * * 6'

name: UTAs Slack Bot Notifications
jobs:
  update-logs:
    name: UTAs Slack Bot Notifications
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      pull-requests: write
      repository-projects: write
    env:
      PIPENV_VENV_IN_PROJECT: 'enabled'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Check pipenv cache before installing dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ./.venv # since we know that .venv is gonna be created in the current working directory
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv

      - name: Install requirements
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          touch Pipfile
          pipenv install --deploy --dev --verbose

      - name: Get data and send notification
        env:
          CODEPOST_API_KEY: ${{ secrets.CODEPOST_API_KEY }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
        run: |
          pipenv run python ./utas_slack_bot.py

      - name: Commit generated logs ðŸš€
        if: success() || failure()
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Commit updated data'
          add: './data/*'
          cwd: '.'
          force: true
          default_author: github_actions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
